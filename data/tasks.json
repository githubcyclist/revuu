{
  "tasks": [
    {
      "instructions": "List files in a directory \n\nWithout making a system call, load an array of the files in the current  \ndirectory and then inspect the resulting array. ",
      "tags": [
        "Ruby",
        "Dir"
      ],
      "score": 4,
      "saved": true,
      "lang": "Ruby",
      "date_started": "2018-10-22T16:08:39-05:00",
      "next_review_date": "2018-10-22T16:08:39-05:00",
      "all_reviews": [

      ],
      "id": 64,
      "file": "answer_64.rb",
      "location": "./data/answers/answer_64.rb",
      "old_file": "answer_old_64.rb",
      "old_location": "./data/answers/answer_old_64.rb",
      "starter_location": "./data/starters/starter_64.rb"
    },
    {
      "instructions": "Extract letters from string\n\nGiven the string 'hxexlxlxox xwxoxrxlxdx', extract the familiar phrase \nand print it. Use string indexes--in an abbreviated version of \nString#slice-- in your answer. Do not simply delete all the x's (yes,\nstr.delete!('x') has the same effect).",
      "tags": [
        "Ruby",
        "strings"
      ],
      "score": 4,
      "saved": true,
      "lang": "Ruby",
      "date_started": "2018-10-01T18:08:14-04:00",
      "next_review_date": "2018-10-22T12:00:00-04:00",
      "all_reviews": [
        {
          "score": 4,
          "review_date": "2018-10-01T18:20:10-04:00"
        }
      ],
      "id": 29,
      "file": "answer_29.rb",
      "location": "./data/answers/answer_29.rb",
      "old_file": "answer_old_29.rb",
      "old_location": "./data/answers/answer_old_29.rb",
      "starter_location": "./data/starters/starter_29.rb"
    },
    {
      "instructions": "Zip and unzip via the command line \n\nIn case you do something really stupid, be sure to make a backup before  \nyou do this. \n\nOn the command line, zip (not gz, not tar) the revuu/data/starters/  \ndirectory and put the resulting zip file in the data/answers directory.  \nThen unzip it in that directory. Then delete both the zip file and the  \nunzipped starters directory.",
      "tags": [
        "Bash",
        "command line",
        "shell",
        "shell scripting",
        "Bash scripting",
        "Linux",
        "Unix",
        "zip",
        "unzip"
      ],
      "score": 3,
      "saved": true,
      "lang": "Bash",
      "date_started": "2018-10-22T15:45:30-05:00",
      "next_review_date": "2018-10-22T15:45:30-05:00",
      "all_reviews": [

      ],
      "id": 63,
      "file": "answer_63.sh",
      "location": "./data/answers/answer_63.sh",
      "old_file": "answer_old_63.sh",
      "old_location": "./data/answers/answer_old_63.sh",
      "starter_location": "./data/starters/starter_63.sh"
    },
    {
      "instructions": "Printing the date and time using DateTime\n\nCreate a DateTime object representing the current time, and print it \nout as a string (not with #inspect). Then add seven days to the date\nand print a string of the format, \"In a week it will be MM/DD/YYYY.\"\nFinally, take the current time, add two hours to it and print a \nstring of the format, \"In two hours it will be HH:MM AM/PM.\"",
      "tags": [
        "Ruby",
        "DateTime",
        "strftime",
        "directives",
        "format directives"
      ],
      "score": 4,
      "saved": true,
      "lang": "Ruby",
      "date_started": "2018-10-15T23:16:13-04:00",
      "next_review_date": "2018-10-22T23:24:55-04:00",
      "all_reviews": [
        {
          "score": 4,
          "review_date": "2018-10-15T23:25:15-04:00"
        }
      ],
      "id": 48,
      "file": "answer_48.rb",
      "location": "./data/answers/answer_48.rb",
      "old_file": "answer_old_48.rb",
      "old_location": "./data/answers/answer_old_48.rb",
      "starter_location": "./data/starters/starter_48.rb"
    },
    {
      "instructions": "So many ways to write an em dash\n\nUse Integer#chr, a string containing \\u, and Array#pack to write three em \ndashes. No need to have these perfectly memorized (and the hex code, \ndefinitely not). The question is, how confident are you in using these things?\n\nNOTE: You definitely need to add questions about each of these methods because\neach is fairly involved and you're having to brute-force memorize this, which\nis really contrary to what Revuu questions are all about.",
      "tags": [
        "Ruby",
        "chr",
        "pack",
        "\\u",
        "\\x",
        "character encoding"
      ],
      "score": 4,
      "saved": true,
      "lang": "Ruby",
      "date_started": "2018-10-03T09:10:43+01:00",
      "next_review_date": "2018-10-23T09:49:54-04:00",
      "all_reviews": [
        {
          "score": 2,
          "review_date": "2018-10-03T10:09:50+01:00"
        },
        {
          "score": 3,
          "review_date": "2018-10-04T08:46:01+02:00"
        },
        {
          "score": 3,
          "review_date": "2018-10-06T08:34:18+02:00"
        },
        {
          "score": 4,
          "review_date": "2018-10-09T09:49:54-04:00"
        }
      ],
      "id": 32,
      "file": "answer_32.rb",
      "location": "./data/answers/answer_32.rb",
      "old_file": "answer_old_32.rb",
      "old_location": "./data/answers/answer_old_32.rb",
      "starter_location": "./data/starters/starter_32.rb"
    },
    {
      "instructions": "Generate array fast \n\nIn a single expression broken over a few lines for readability, generate  \nand print the array [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]. ",
      "tags": [
        "JavaScript",
        "JS",
        "Node",
        "Node.js",
        "spread operator",
        "array constructor",
        "keys"
      ],
      "score": 3,
      "saved": true,
      "lang": "JavaScript",
      "date_started": "2018-10-10T13:12:35-07:00",
      "next_review_date": "2018-10-23T09:59:54-04:00",
      "all_reviews": [
        {
          "score": 4,
          "review_date": "2018-10-11T06:28:30-07:00"
        },
        {
          "score": 3,
          "review_date": "2018-10-16T10:00:07-04:00"
        }
      ],
      "id": 47,
      "file": "answer_47.js",
      "location": "./data/answers/answer_47.js",
      "old_file": "answer_old_47.js",
      "old_location": "./data/answers/answer_old_47.js",
      "starter_location": "./data/starters/starter_47.js"
    },
    {
      "instructions": "Shortcut for def self.my_class_method?\n\nGiven the little class in the starter code, how can you abbreviate \n'def self.my_class_method' and 'def self.my_other_class_method'?\n\nRewrite it, and then call the methods (one line per each) outside the \nclass definition.",
      "tags": [
        "Ruby",
        "class << self",
        "self",
        "class methods"
      ],
      "score": 3,
      "saved": true,
      "lang": "Ruby",
      "date_started": "2018-09-25T03:29:33-04:00",
      "next_review_date": "2018-10-23T10:39:05-04:00",
      "all_reviews": [
        {
          "score": 3,
          "review_date": "2018-09-25T03:42:08-04:00"
        },
        {
          "score": 3,
          "review_date": "2018-10-09T10:39:05-04:00"
        }
      ],
      "id": 4,
      "file": "answer_4.rb",
      "location": "./data/answers/answer_4.rb",
      "old_file": "answer_old_4.rb",
      "old_location": "./data/answers/answer_old_4.rb",
      "starter_location": "./data/starters/starter_4.rb"
    },
    {
      "instructions": "Calling class, instance, and global methods\n\nRefer to the starter code.\n\nFrom ::create_with_num, set num equal to ::class_number, then (within the\nsame method) return an instance of MyClass with (number: num) as an argument. \nUse ::create_with_num to create an instance. (3) Let #my_sum = the \nsum of @number, ::class_number_deux, #instance_number, and global_number. \nPrint the result of calling #my_sum on the instance. Should be 27.",
      "tags": [
        "Ruby",
        "self",
        "class",
        "new"
      ],
      "score": 4,
      "saved": true,
      "lang": "Ruby",
      "date_started": "2018-09-25T05:56:23-04:00",
      "next_review_date": "2018-10-23T16:04:18-04:00",
      "all_reviews": [
        {
          "score": 3,
          "review_date": "2018-09-25T07:35:36-04:00"
        },
        {
          "score": 4,
          "review_date": "2018-10-02T16:04:18-04:00"
        }
      ],
      "id": 5,
      "file": "answer_5.rb",
      "location": "./data/answers/answer_5.rb",
      "old_file": "answer_old_5.rb",
      "old_location": "./data/answers/answer_old_5.rb",
      "starter_location": "./data/starters/starter_5.rb"
    },
    {
      "instructions": "Destructure an array \n\nExamine the code starter. Rewrite the three number const assignments so  \nthat they are done together in one expression. Make sure the result  \nremains the same. ",
      "tags": [
        "JavaScript",
        "JS",
        "Node",
        "Node.js",
        "destructuring assignment",
        "assignment"
      ],
      "score": 3,
      "saved": true,
      "lang": "JavaScript",
      "date_started": "2018-10-20T09:32:17-04:00",
      "next_review_date": "2018-10-24T09:33:33-04:00",
      "all_reviews": [
        {
          "score": 3,
          "review_date": "2018-10-20T09:33:34-04:00"
        }
      ],
      "id": 57,
      "file": "answer_57.js",
      "location": "./data/answers/answer_57.js",
      "old_file": "answer_old_57.js",
      "old_location": "./data/answers/answer_old_57.js",
      "starter_location": "./data/starters/starter_57.js"
    },
    {
      "instructions": "Array constructors\n\nUse an array constructor (not a literal) to create an array with 10 empty slots.\n(Wait, what are the slots filled with?) Then create an array with 10 'true'\nvalues. Finally, create an array (no cheating, must be an array constructor)\nof numbers 0 through 9.",
      "tags": [
        "Ruby",
        "array",
        "array constructor"
      ],
      "score": 3,
      "saved": true,
      "lang": "Ruby",
      "date_started": "2018-10-17T13:50:59-04:00",
      "next_review_date": "2018-10-24T10:35:32-04:00",
      "all_reviews": [
        {
          "score": 3,
          "review_date": "2018-10-17T13:53:20-04:00"
        },
        {
          "score": 3,
          "review_date": "2018-10-20T10:35:32-04:00"
        }
      ],
      "id": 52,
      "file": "answer_52.rb",
      "location": "./data/answers/answer_52.rb",
      "old_file": "answer_old_52.rb",
      "old_location": "./data/answers/answer_old_52.rb",
      "starter_location": "./data/starters/starter_52.rb"
    },
    {
      "instructions": "Combined comparison operator\n\nGenerate the array of integers from -10 to 10. Then use Ruby's \ncombined comparison operator together with #case (three cases)\nto construct (and then print) all the negative and all the \npositive integers in the array.\n\n(Hint: of course there are much faster ways of doing this. We're\njust reminding ourselves of how to use the tools here.)",
      "tags": [
        "Ruby",
        "<=>",
        "combined comparison operator",
        "case"
      ],
      "score": 4,
      "saved": true,
      "lang": "Ruby",
      "date_started": "2018-10-17T09:19:43-04:00",
      "next_review_date": "2018-10-24T12:05:48-04:00",
      "all_reviews": [
        {
          "score": 4,
          "review_date": "2018-10-17T12:05:51-04:00"
        }
      ],
      "id": 50,
      "file": "answer_50.rb",
      "location": "./data/answers/answer_50.rb",
      "old_file": "answer_old_50.rb",
      "old_location": "./data/answers/answer_old_50.rb",
      "starter_location": "./data/starters/starter_50.rb"
    },
    {
      "instructions": "Don't warn me about deprecated code, plz \n\nThe starter code uses a deprecated class and a coder warns the user that  \nit is, indeed, deprecated. Turn off his warning (not by deleting it). ",
      "tags": [
        "Ruby",
        "$VERBOSE",
        "$VERBOSE = nil",
        "warn"
      ],
      "score": 4,
      "saved": true,
      "lang": "Ruby",
      "date_started": "2018-10-20T14:53:47-04:00",
      "next_review_date": "2018-10-24T14:55:21-04:00",
      "all_reviews": [
        {
          "score": 4,
          "review_date": "2018-10-20T14:55:21-04:00"
        }
      ],
      "id": 61,
      "file": "answer_61.rb",
      "location": "./data/answers/answer_61.rb",
      "old_file": "answer_old_61.rb",
      "old_location": "./data/answers/answer_old_61.rb",
      "starter_location": "./data/starters/starter_61.rb"
    },
    {
      "instructions": "Advanced arrow functions\n\nRewrite this as a nested arrow function in the most concise way possible:\n\nconst factorial = function(arr) {\n  return arr.reduce(function(x,y) {\n    return x * y\n  });\n}\n\nUse the result of your rewriting to prove that factorial(arr) = 120,\nwhere arr = [5, 4, 3, 2, 1] (print out the answer).",
      "tags": [
        "JavaScript",
        "JS",
        "Node",
        "Node.js",
        "arrow functions",
        "reduce",
        "nested functions"
      ],
      "score": 4,
      "saved": true,
      "lang": "JavaScript",
      "date_started": "2018-10-06T12:36:05+01:00",
      "next_review_date": "2018-10-24T13:03:16-07:00",
      "all_reviews": [
        {
          "score": 4,
          "review_date": "2018-10-06T13:05:42+01:00"
        },
        {
          "score": 4,
          "review_date": "2018-10-10T13:03:16-07:00"
        }
      ],
      "id": 42,
      "file": "answer_42.js",
      "location": "./data/answers/answer_42.js",
      "old_file": "answer_old_42.js",
      "old_location": "./data/answers/answer_old_42.js",
      "starter_location": "./data/starters/starter_42.js"
    },
    {
      "instructions": "Destructuring assignment \n\nRewrite the ES5 code in the starter code using a \"destructuring  \nassignment\" permitted by ES6. (Comment out the old-fashioned lines.) ",
      "tags": [
        "JavaScript",
        "JS",
        "Node",
        "Node.js",
        "destructuring assignment"
      ],
      "score": 4,
      "saved": true,
      "lang": "JavaScript",
      "date_started": "2018-10-18T23:08:52-04:00",
      "next_review_date": "2018-10-25T10:09:53-04:00",
      "all_reviews": [
        {
          "score": 3,
          "review_date": "2018-10-18T23:10:57-04:00"
        },
        {
          "score": 4,
          "review_date": "2018-10-20T10:09:53-04:00"
        }
      ],
      "id": 56,
      "file": "answer_56.js",
      "location": "./data/answers/answer_56.js",
      "old_file": "answer_old_56.js",
      "old_location": "./data/answers/answer_old_56.js",
      "starter_location": "./data/starters/starter_56.js"
    },
    {
      "instructions": "Changing a CONST?!\n\nChange this\n\nconst UNTOUCHABLE = ['a', 'b', 'c'];\n\nso that its total value is [1, 2, 3]. First, use a try-catch block to show the\nerror message that you get when you simply try to reassign the variable\nidentifier UNTOUCHABLE. After changing the array, print it.",
      "tags": [
        "JavaScript",
        "JS",
        "Node",
        "Node.js",
        "const",
        "try",
        "catch"
      ],
      "score": 4,
      "saved": true,
      "lang": "JavaScript",
      "date_started": "2018-10-04T18:30:57+02:00",
      "next_review_date": "2018-10-25T18:53:35+02:00",
      "all_reviews": [
        {
          "score": 4,
          "review_date": "2018-10-04T18:53:35+02:00"
        }
      ],
      "id": 37,
      "file": "answer_37.js",
      "location": "./data/answers/answer_37.js",
      "old_file": "answer_old_37.js",
      "old_location": "./data/answers/answer_old_37.js",
      "starter_location": "./data/starters/starter_37.js"
    },
    {
      "instructions": "Fix this broken use of the spread operator\n\nThis is very quick and easy: fix the error in the starter code.",
      "tags": [
        "JavaScript",
        "JS",
        "Node",
        "Node.js",
        "spread operator",
        "..."
      ],
      "score": 4,
      "saved": true,
      "lang": "JavaScript",
      "date_started": "2018-10-18T22:59:50-04:00",
      "next_review_date": "2018-10-25T23:00:11-04:00",
      "all_reviews": [
        {
          "score": 4,
          "review_date": "2018-10-18T23:00:13-04:00"
        }
      ],
      "id": 55,
      "file": "answer_55.js",
      "location": "./data/answers/answer_55.js",
      "old_file": "answer_old_55.js",
      "old_location": "./data/answers/answer_old_55.js",
      "starter_location": "./data/starters/starter_55.js"
    },
    {
      "instructions": "Demonstrate the splat operator\n\nSuppose you have \n\nfriends = ['Jack', 'Jill', 'Sam']\n\nand you want to pass the array's elements not as an array, but \nindividually, to a method, preceded by a greeting type (the \"yo\"\nmethod in the starter code). How do you do that quite simply?\n\nRelated problem: suppose you want to use 'first' and 'the_rest' \nfor 'a' and ['b', 'c', 'd'], respectively. You already have \n\narr = ['a', 'b', 'c', 'd']\n\nso how do you assign the variables in *one simple* line? Do so\nand then print them in a string: \"I really like a, but as\nto b, c, d...they're OK.\"",
      "tags": [
        "Ruby",
        "splat",
        "splat operator"
      ],
      "score": 3,
      "saved": true,
      "lang": "Ruby",
      "date_started": "2018-10-01T17:42:06-04:00",
      "next_review_date": "2018-10-26T10:29:46-04:00",
      "all_reviews": [
        {
          "score": 3,
          "review_date": "2018-10-01T18:01:38-04:00"
        },
        {
          "score": 4,
          "review_date": "2018-10-05T06:58:44+02:00"
        },
        {
          "score": 3,
          "review_date": "2018-10-15T10:29:59-04:00"
        }
      ],
      "id": 28,
      "file": "answer_28.rb",
      "location": "./data/answers/answer_28.rb",
      "old_file": "answer_old_28.rb",
      "old_location": "./data/answers/answer_old_28.rb",
      "starter_location": "./data/starters/starter_28.rb"
    },
    {
      "instructions": "Create and use a \"cubed\" proc\n\nCreate a proc that cubes (raised to the third power) a number; then use it\nto find 3 cubed (27). Then create a lambda using more verbose syntax that \nraises a number to the fourth power and use it to find 7^4 (2401). Finally, \ncreate a lamdba using briefer syntax and user it to find 13^6 (4826809).",
      "tags": [
        "Ruby",
        "Proc",
        "Proc#new",
        "call",
        "procs",
        "lambda",
        "lambda literal",
        "exponents"
      ],
      "score": 3,
      "saved": true,
      "lang": "Ruby",
      "date_started": "2018-09-25T15:19:06-04:00",
      "next_review_date": "2018-10-26T10:58:31-04:00",
      "all_reviews": [
        {
          "score": 3,
          "review_date": "2018-09-25T15:48:43-04:00"
        },
        {
          "score": 4,
          "review_date": "2018-09-26T00:23:33-04:00"
        },
        {
          "score": 3,
          "review_date": "2018-10-21T10:58:31-04:00"
        }
      ],
      "id": 7,
      "file": "answer_7.rb",
      "location": "./data/answers/answer_7.rb",
      "old_file": "answer_old_7.rb",
      "old_location": "./data/answers/answer_old_7.rb",
      "starter_location": "./data/starters/starter_7.rb"
    },
    {
      "instructions": "Encoding and decoding JSON in Ruby\n\nSuppose you have a Ruby hash: \n\nconfig = {'lang' => 'Ruby', 'text_editor' => 'Pico'}\n\nFirst, write this to \"./config.json\" in JSON format. Then add a line or two \nto read the file and decode it from JSON back to a Ruby hash. Prove that you have \ndecoded the file by reading the value of settings['lang']. Finally, delete the\nfile you created.",
      "tags": [
        "Ruby",
        "to_json",
        "JSON#parse"
      ],
      "score": 4,
      "saved": true,
      "lang": "Ruby",
      "date_started": "2018-10-03T11:37:09+01:00",
      "next_review_date": "2018-10-26T08:22:35-07:00",
      "all_reviews": [
        {
          "score": 4,
          "review_date": "2018-10-03T11:45:26+01:00"
        },
        {
          "score": 4,
          "review_date": "2018-10-12T08:22:35-07:00"
        }
      ],
      "id": 33,
      "file": "answer_33.rb",
      "location": "./data/answers/answer_33.rb",
      "old_file": "answer_old_33.rb",
      "old_location": "./data/answers/answer_old_33.rb",
      "starter_location": "./data/starters/starter_33.rb"
    },
    {
      "instructions": "Determine if a file has nonzero size \n\nUsing a File class method, simply print out the size of \"../revuu.rb\" in  \nbytes; then in KB; then show all decimals in the answer; then limit the  \ndecimal places to two. ",
      "tags": [
        "Ruby",
        "File#stat"
      ],
      "score": 3,
      "saved": true,
      "lang": "Ruby",
      "date_started": "2018-10-03T12:12:37+01:00",
      "next_review_date": "2018-10-27T10:48:54-04:00",
      "all_reviews": [
        {
          "score": 3,
          "review_date": "2018-10-03T12:39:34+01:00"
        },
        {
          "score": 3,
          "review_date": "2018-10-10T10:47:07-07:00"
        },
        {
          "score": 3,
          "review_date": "2018-10-20T10:48:54-04:00"
        }
      ],
      "id": 34,
      "file": "answer_34.rb",
      "location": "./data/answers/answer_34.rb",
      "old_file": "answer_old_34.rb",
      "old_location": "./data/answers/answer_old_34.rb",
      "starter_location": "./data/starters/starter_34.rb"
    },
    {
      "instructions": "Use ASCII escape sequences correctly\n\nRewrite the strings 'Band-Aid(r)' and '98.6 degrees F' to include the (r)\nand degree symbols, using Unicode and hexadecimal escape sequences (both\n--which you can, of course, look up). Then print 'hi' using the same sort \nof sequences. (No using String.fromCharCode(); that will be a separate \nquestion.)",
      "tags": [
        "JavaScript",
        "JS",
        "Node",
        "Node.js",
        "escape sequences",
        "ASCII"
      ],
      "score": 3,
      "saved": true,
      "lang": "JavaScript",
      "date_started": "2018-09-28T09:22:08-04:00",
      "next_review_date": "2018-10-27T11:30:00-04:00",
      "all_reviews": [
        {
          "score": 4,
          "review_date": "2018-09-29T19:46:41-04:00"
        },
        {
          "score": 3,
          "review_date": "2018-10-20T11:30:00-04:00"
        }
      ],
      "id": 14,
      "file": "answer_14.js",
      "location": "./data/answers/answer_14.js",
      "old_file": "answer_old_14.js",
      "old_location": "./data/answers/answer_old_14.js",
      "starter_location": "./data/starters/starter_14.js"
    },
    {
      "instructions": "Does this method work? \n\nWrite a method that extends class Integer with the method  \n#factorial_minus_triangle which takes a number, n, and returns the  \nfactorial of n minus the triangle number n. (Factorial = all numbers from  \n1 to n multiplied; triangle number = all numbers from 1 to n added up.) \n\nBefore applying your method, check that the method works on Integers,  \nwith a particular method you can use to check if it does. \n\nFinally, apply your method to 1 through 10 and print the results. ",
      "tags": [
        "Ruby",
        "open class",
        "factorial",
        "inject",
        "reduce"
      ],
      "score": 3,
      "saved": true,
      "lang": "Ruby",
      "date_started": "2018-10-20T12:17:43-04:00",
      "next_review_date": "2018-10-27T13:09:22-04:00",
      "all_reviews": [
        {
          "score": 3,
          "review_date": "2018-10-20T13:09:22-04:00"
        }
      ],
      "id": 58,
      "file": "answer_58.rb",
      "location": "./data/answers/answer_58.rb",
      "old_file": "answer_old_58.rb",
      "old_location": "./data/answers/answer_old_58.rb",
      "starter_location": "./data/starters/starter_58.rb"
    },
    {
      "instructions": "Rewrite this conditional assignment\n\nThere is a quick and easy way to rewrite\n\na = a || 25\n\nWhat is it?",
      "tags": [
        "Ruby",
        "conditional assignment operator",
        "conditional assignment",
        "||="
      ],
      "score": 4,
      "saved": true,
      "lang": "Ruby",
      "date_started": "2018-10-20T13:17:08-04:00",
      "next_review_date": "2018-10-27T13:24:42-04:00",
      "all_reviews": [
        {
          "score": 4,
          "review_date": "2018-10-20T13:24:47-04:00"
        }
      ],
      "id": 59,
      "file": "answer_59.rb",
      "location": "./data/answers/answer_59.rb",
      "old_file": "answer_old_59.rb",
      "old_location": "./data/answers/answer_old_59.rb",
      "starter_location": "./data/starters/starter_59.rb"
    },
    {
      "instructions": "Pick some, only some, hash items\n\nCreate a hash of 26 key-value pairs, following the pattern {a: 1, b: 2, \n... z: 26} (note, must be symbols). Then return a hash that includes just \nthose pairs the values of which are multiples of 3. Display the result; \nthen print just the keys.",
      "tags": [
        "Ruby",
        "hash",
        "symbol",
        "to_sym",
        "intern",
        "select",
        "inspect"
      ],
      "score": 4,
      "saved": true,
      "lang": "Ruby",
      "date_started": "2018-10-17T14:39:37-04:00",
      "next_review_date": "2018-10-27T14:57:43-04:00",
      "all_reviews": [
        {
          "score": 4,
          "review_date": "2018-10-17T14:57:43-04:00"
        }
      ],
      "id": 54,
      "file": "answer_54.rb",
      "location": "./data/answers/answer_54.rb",
      "old_file": "answer_old_54.rb",
      "old_location": "./data/answers/answer_old_54.rb",
      "starter_location": "./data/starters/starter_54.rb"
    },
    {
      "instructions": "Print \"Hello world!\" in Python",
      "tags": [
        "Python",
        "hello world"
      ],
      "score": 3,
      "saved": true,
      "lang": "Python",
      "date_started": "2018-10-17T07:48:36-04:00",
      "next_review_date": "2018-10-28T10:17:36-04:00",
      "all_reviews": [
        {
          "score": 3,
          "review_date": "2018-10-17T07:55:14-04:00"
        },
        {
          "score": 3,
          "review_date": "2018-10-21T10:17:37-04:00"
        }
      ],
      "id": 49,
      "file": "answer_49.py",
      "location": "./data/answers/answer_49.py",
      "old_file": "answer_old_49.py",
      "old_location": "./data/answers/answer_old_49.py",
      "starter_location": "./data/starters/starter_49.py"
    },
    {
      "instructions": "Make a block method that uses \"yield\" \n\nWrite a block method, Array#each_odd, that returns in place a version of  \nthe array that replaces each element having an odd-numbered index (so,  \n[1], [3], [5], etc.) with the result of passing that element to the block.\n\nApply the methods to 'az' and 'nums' (in the code starter) and display  \nthe output, which should be, precisely: \n\n[\"a\", \"B\", \"c\", \"D\", \"e\", \"F\", \"g\"]\n[1, 4, 3, 8, 5, 12, 7, 16, 9, 20]",
      "tags": [
        "Ruby",
        "block",
        "yield",
        "each_with_index",
        "map"
      ],
      "score": 4,
      "saved": true,
      "lang": "Ruby",
      "date_started": "2018-10-20T15:11:43-04:00",
      "next_review_date": "2018-10-28T10:25:20-04:00",
      "all_reviews": [
        {
          "score": 2,
          "review_date": "2018-10-20T21:39:11-04:00"
        },
        {
          "score": 4,
          "review_date": "2018-10-21T10:25:20-04:00"
        }
      ],
      "id": 62,
      "file": "answer_62.rb",
      "location": "./data/answers/answer_62.rb",
      "old_file": "answer_old_62.rb",
      "old_location": "./data/answers/answer_old_62.rb",
      "starter_location": "./data/starters/starter_62.rb"
    },
    {
      "instructions": "Using the colorize gem\n\nIn the starter code's strings, use the Colorize gem to print the first \none green, the second with a red background, and the third one with \nblack-on-white print.",
      "tags": [
        "Ruby",
        "colorize"
      ],
      "score": 4,
      "saved": true,
      "lang": "Ruby",
      "date_started": "2018-10-01T09:28:51-04:00",
      "next_review_date": "2018-10-29T01:43:33-04:00",
      "all_reviews": [
        {
          "score": 4,
          "review_date": "2018-10-01T11:26:01-04:00"
        },
        {
          "score": 4,
          "review_date": "2018-10-08T01:43:33-04:00"
        }
      ],
      "id": 24,
      "file": "answer_24.rb",
      "location": "./data/answers/answer_24.rb",
      "old_file": "answer_old_24.rb",
      "old_location": "./data/answers/answer_old_24.rb",
      "starter_location": "./data/starters/starter_24.rb"
    },
    {
      "instructions": "Data types galore\n\nWrite a string or a few strings that use the following data types:\nchar, int, float, double. Use 'short' and 'long' to taste; but use\nthem. For the numbers, use something close to the smallest number \nthat the next \"smaller\" number data type couldn't handle. Perform \nsome arithmetic operations with the number data types.\n\nFor reference, maybe see: https://en.wikipedia.org/wiki/C_data_types",
      "tags": [
        "C",
        "C language",
        "C programming language",
        "char",
        "short",
        "long",
        "double",
        "float",
        "printf"
      ],
      "score": 4,
      "saved": true,
      "lang": "C",
      "date_started": "2018-10-08T04:02:08-04:00",
      "next_review_date": "2018-10-29T10:44:20-04:00",
      "all_reviews": [
        {
          "score": 3,
          "review_date": "2018-10-08T07:55:47-04:00"
        },
        {
          "score": 4,
          "review_date": "2018-10-15T10:45:20-04:00"
        }
      ],
      "id": 46,
      "file": "answer_46.c",
      "location": "./data/answers/answer_46.c",
      "old_file": "answer_old_46.c",
      "old_location": "./data/answers/answer_old_46.c",
      "starter_location": "./data/starters/starter_46.c"
    },
    {
      "instructions": "IDs and identity \n\nAssign a symbol to a variable as a value. Then set another variable equal \nto the first variable. Print out the ID of the two variables; predict, \nbefore you do, whether they will have the same ID.\n\nDo the same thing with a string, a number, an array, and a hash (or,  \nenough to persuade yourself). Then reconstruct a similar string (e.g., if  \nyou used 'hi' then use 'hi' again) and assign it to a different variable.  \nAlso, try changing the value of the first string and see if it affects  \nthe value of the second. Make sure you do the latter experiment with an  \narray. In all cases, predict in advance whether the two variables will  \nhave the same value. \n\nThen try changing the original after using #dup and #clone on an array.  \nBe sure you know the answer before you print it! ",
      "tags": [
        "Ruby",
        "object_id",
        "object id",
        "ID",
        "symbol",
        "string",
        "number",
        "array",
        "hash",
        "dup",
        "clone"
      ],
      "score": 4,
      "saved": true,
      "lang": "Ruby",
      "date_started": "2018-10-17T14:04:34-04:00",
      "next_review_date": "2018-10-29T10:49:39-04:00",
      "all_reviews": [
        {
          "score": 3,
          "review_date": "2018-10-17T14:29:40-04:00"
        },
        {
          "score": 4,
          "review_date": "2018-10-21T10:49:40-04:00"
        }
      ],
      "id": 53,
      "file": "answer_53.rb",
      "location": "./data/answers/answer_53.rb",
      "old_file": "answer_old_53.rb",
      "old_location": "./data/answers/answer_old_53.rb",
      "starter_location": "./data/starters/starter_53.rb"
    },
    {
      "instructions": "Return an array of squared positive integers \n\nGiven \n\nlet nums = [3, -25, 0.67, 7, -12.25, 12.25, 12]; \n\nwrite and then print the result of using chained arrow functions that  \nreturn the squares of only elements that are (a) positive and \n(b) integers. Response should be [9, 49, 144].",
      "tags": [
        "JavaScript",
        "JS",
        "Node",
        "Node.js",
        "filter",
        "map",
        "pow"
      ],
      "score": 3,
      "saved": true,
      "lang": "JavaScript",
      "date_started": "2018-10-06T13:12:15+01:00",
      "next_review_date": "2018-10-29T17:52:58-04:00",
      "all_reviews": [
        {
          "score": 3,
          "review_date": "2018-10-06T14:13:27+01:00"
        },
        {
          "score": 3,
          "review_date": "2018-10-09T10:50:06-04:00"
        },
        {
          "score": 3,
          "review_date": "2018-10-19T17:53:01-04:00"
        }
      ],
      "id": 43,
      "file": "answer_43.js",
      "location": "./data/answers/answer_43.js",
      "old_file": "answer_old_43.js",
      "old_location": "./data/answers/answer_old_43.js",
      "starter_location": "./data/starters/starter_43.js"
    },
    {
      "instructions": "Stop that mutation!\n\nCreate an object (using const) that has components (elements or attributes)\nand then apply a certain method that will prevent those components from\nbeing changed. Print out a component; then attempt to change it; then print\nit out again. Did you know what would happen? Make your prediction in a \ncomment beforehand.",
      "tags": [
        "JavaScript",
        "JS",
        "Node",
        "Node.js",
        "Object#freeze",
        "freeze",
        "const"
      ],
      "score": 3,
      "saved": true,
      "lang": "JavaScript",
      "date_started": "2018-10-04T21:32:35+02:00",
      "next_review_date": "2018-10-30T11:46:41-04:00",
      "all_reviews": [
        {
          "score": 3,
          "review_date": "2018-10-04T22:00:52+02:00"
        },
        {
          "score": 3,
          "review_date": "2018-10-09T11:05:36-04:00"
        },
        {
          "score": 3,
          "review_date": "2018-10-20T11:46:41-04:00"
        }
      ],
      "id": 39,
      "file": "answer_39.js",
      "location": "./data/answers/answer_39.js",
      "old_file": "answer_old_39.js",
      "old_location": "./data/answers/answer_old_39.js",
      "starter_location": "./data/starters/starter_39.js"
    },
    {
      "instructions": "Create an object literal with properties and function\n\nCreate a johnDoe object literal with firstName and lastName properties\nand greet function. Calling the function should output to the console\nthe message, \"Hi, I'm John Doe.\"",
      "tags": [
        "JavaScript",
        "JS",
        "Node",
        "Node.js",
        "object literals",
        "properties",
        "functions"
      ],
      "score": 4,
      "saved": true,
      "lang": "JavaScript",
      "date_started": "2018-09-26T07:56:54-04:00",
      "next_review_date": "2018-11-02T14:48:14-04:00",
      "all_reviews": [
        {
          "score": 3,
          "review_date": "2018-09-26T08:01:25-04:00"
        },
        {
          "score": 3,
          "review_date": "2018-09-29T01:43:22-04:00"
        },
        {
          "score": 4,
          "review_date": "2018-10-02T14:48:14-04:00"
        }
      ],
      "id": 10,
      "file": "answer_10.js",
      "location": "./data/answers/answer_10.js",
      "old_file": "answer_old_10.js",
      "old_location": "./data/answers/answer_old_10.js",
      "starter_location": "./data/starters/starter_10.js"
    },
    {
      "instructions": "What's higher in value?\n\n(Answer all questions before you run anything.)\n\nGenerate the (lowercase) alphabet (= az), then sort it using a \nblock: { |x,y| x <=> y }. What will be the value of az[0]? \nPredict correctly before showing. Regenerate so that az[0] has the\nopposite value.\n\nNext, sort without a block. What is az[0]? Predict then demonstrate.\n\nFinally, what is the value of 'a' <=> 'b'? Predict then demonstrate.\n\nPrint ASCII characters 32 to 126. Use the spaceship operator to \ncompare a character from the 32-47 range with a character from the\n123-126 range.\n\nWhen you sort with |x,y| x <=> y, does the sorter place the lower-\nvalued items first or last?",
      "tags": [
        "Ruby",
        "sort",
        "combined comparison operator",
        "<=>",
        "ASCII"
      ],
      "score": 4,
      "saved": true,
      "lang": "Ruby",
      "date_started": "2018-10-17T12:19:31-04:00",
      "next_review_date": "2018-11-03T10:21:05-04:00",
      "all_reviews": [
        {
          "score": 2,
          "review_date": "2018-10-17T13:44:39-04:00"
        },
        {
          "score": 4,
          "review_date": "2018-10-20T10:21:05-04:00"
        }
      ],
      "id": 51,
      "file": "answer_51.rb",
      "location": "./data/answers/answer_51.rb",
      "old_file": "answer_old_51.rb",
      "old_location": "./data/answers/answer_old_51.rb",
      "starter_location": "./data/starters/starter_51.rb"
    },
    {
      "instructions": "Substitute all instances of this with that\n\nIn the following string, replace every instance of 'ae' with 'e'. Don't use\nregular expressions; use a simple method. Print the result.\n\n\"Encyclopaedias make me feel so anaemic that I need anaesthesia.\"",
      "tags": [
        "Ruby",
        "gsub",
        "gsub!"
      ],
      "score": 4,
      "saved": true,
      "lang": "Ruby",
      "date_started": "2018-09-25T16:34:55-04:00",
      "next_review_date": "2018-11-03T20:31:42-04:00",
      "all_reviews": [
        {
          "score": 4,
          "review_date": "2018-09-25T16:38:07-04:00"
        },
        {
          "score": 4,
          "review_date": "2018-09-29T20:31:42-04:00"
        }
      ],
      "id": 8,
      "file": "answer_8.rb",
      "location": "./data/answers/answer_8.rb",
      "old_file": "answer_old_8.rb",
      "old_location": "./data/answers/answer_old_8.rb",
      "starter_location": "./data/starters/starter_8.rb"
    },
    {
      "instructions": "Write \"Hello world!\"",
      "tags": [
        "C",
        "C language",
        "C programming language",
        "int",
        "main",
        "printf",
        "foo",
        "boo",
        "bar",
        "far",
        "baz",
        "qux",
        "sucks"
      ],
      "score": 4,
      "saved": true,
      "lang": "C",
      "date_started": "2018-09-23T00:00:00+00:00",
      "next_review_date": "2018-11-04T13:47:56-05:00",
      "all_reviews": [
        {
          "score": 5,
          "review_date": "2018-09-26T22:06:40-04:00"
        },
        {
          "score": 3,
          "review_date": "2018-09-27T05:34:03-04:00"
        },
        {
          "score": 3,
          "review_date": "2018-10-07T06:57:41-05:00"
        },
        {
          "score": 4,
          "review_date": "2018-10-14T14:47:56-04:00"
        }
      ],
      "id": 1,
      "file": "answer_1.c",
      "location": "./data/answers/answer_1.c",
      "old_file": "answer_old_1.c",
      "old_location": "./data/answers/answer_old_1.c",
      "starter_location": "./data/starters/starter_1.c"
    },
    {
      "instructions": "Hash default values\n\nCreate a dog_breeds hash with 3 dog names as keys and breeds as values.\nSet a hash default value of 'mutt'. Then iterate a five-item array of\ndog names, for each item printing a line reading (e.g.) \"Fido: poodle\". \nThree of the five items should be the three names in dog_breeds. Two \nshould be names not defined by the dog_breed hash.",
      "tags": [
        "Ruby",
        "hash",
        "hash default",
        "default value"
      ],
      "score": 4,
      "saved": true,
      "lang": "Ruby",
      "date_started": "2018-10-01T11:50:09-04:00",
      "next_review_date": "2018-11-05T06:46:14+01:00",
      "all_reviews": [
        {
          "score": 3,
          "review_date": "2018-10-01T12:01:41-04:00"
        },
        {
          "score": 4,
          "review_date": "2018-10-05T06:46:14+02:00"
        }
      ],
      "id": 25,
      "file": "answer_25.rb",
      "location": "./data/answers/answer_25.rb",
      "old_file": "answer_old_25.rb",
      "old_location": "./data/answers/answer_old_25.rb",
      "starter_location": "./data/starters/starter_25.rb"
    },
    {
      "instructions": "'For...in' inclusive vs. exclusive\n\nFirst, construct the array of numbers 1 through 5 very concisely,\nusing a range operator. Then use a form of Ruby's for...in loop \nsyntactic sugar to multiply these numbers by 3 (printing the result \nafter each). Then construct a duplicate array using another form of\nthe range operator. Demonstrate which range operator is *inclusive* \nand which is *exclusive*; be able to say in advance which operator\ndoes what.",
      "tags": [
        "Ruby",
        "for",
        "inclusive",
        "exclusive",
        "range",
        "range operator",
        "to_a"
      ],
      "score": 4,
      "saved": true,
      "lang": "Ruby",
      "date_started": "2018-09-29T21:36:49-04:00",
      "next_review_date": "2018-11-07T07:30:57+00:00",
      "all_reviews": [
        {
          "score": 3,
          "review_date": "2018-09-29T21:55:41-04:00"
        },
        {
          "score": 4,
          "review_date": "2018-10-03T08:30:39+01:00"
        }
      ],
      "id": 16,
      "file": "answer_16.rb",
      "location": "./data/answers/answer_16.rb",
      "old_file": "answer_old_16.rb",
      "old_location": "./data/answers/answer_old_16.rb",
      "starter_location": "./data/starters/starter_16.rb"
    },
    {
      "instructions": "Arrow function syntax\n\nRewrite this simple function without the word 'function()', and then prove\nthat it works by printing the result of calling it:\n\nconst LoveMyFunction = function() {\n  return \"This is really nice function, isn't it?\"\n}",
      "tags": [
        "JavaScript",
        "JS",
        "Node",
        "Node.js",
        "arrow functions"
      ],
      "score": 4,
      "saved": true,
      "lang": "JavaScript",
      "date_started": "2018-10-05T19:17:48+02:00",
      "next_review_date": "2018-11-09T10:53:14-05:00",
      "all_reviews": [
        {
          "score": 3,
          "review_date": "2018-10-05T19:30:01+02:00"
        },
        {
          "score": 4,
          "review_date": "2018-10-09T10:53:14-04:00"
        }
      ],
      "id": 40,
      "file": "answer_40.js",
      "location": "./data/answers/answer_40.js",
      "old_file": "answer_old_40.js",
      "old_location": "./data/answers/answer_old_40.js",
      "starter_location": "./data/starters/starter_40.js"
    },
    {
      "instructions": "Validate strings are numeric without converting to integer\n\nPass the values in the array ['99', '23a', 'xyz'] to a ternary \noperator to output 'x is numeric' or 'x is not numeric' in each case \nas appropriate. (Only the first item is numeric.) Do *not* convert \nthe strings into integers; use a simple handy method.",
      "tags": [
        "JavaScript",
        "JS",
        "Node",
        "Node.js",
        "isNaN",
        "ternary"
      ],
      "score": 4,
      "saved": true,
      "lang": "JavaScript",
      "date_started": "2018-09-28T10:29:35-04:00",
      "next_review_date": "2018-11-10T07:42:15+01:00",
      "all_reviews": [
        {
          "score": 3,
          "review_date": "2018-10-03T00:37:42-04:00"
        },
        {
          "score": 4,
          "review_date": "2018-10-06T08:42:15+02:00"
        }
      ],
      "id": 15,
      "file": "answer_15.js",
      "location": "./data/answers/answer_15.js",
      "old_file": "answer_old_15.js",
      "old_location": "./data/answers/answer_old_15.js",
      "starter_location": "./data/starters/starter_15.js"
    },
    {
      "instructions": "Next letters please \n\nGiven an array of letters 'a' through 'g' (which generate), apply a  \nsimple method that will change the array in place, in one line, to 'b'  \nthrough 'h'. ",
      "tags": [
        "Ruby",
        "next",
        "map"
      ],
      "score": 4,
      "saved": true,
      "lang": "Ruby",
      "date_started": "2018-10-20T14:30:57-04:00",
      "next_review_date": "2018-11-10T13:35:13-05:00",
      "all_reviews": [
        {
          "score": 4,
          "review_date": "2018-10-20T14:35:13-04:00"
        }
      ],
      "id": 60,
      "file": "answer_60.rb",
      "location": "./data/answers/answer_60.rb",
      "old_file": "answer_old_60.rb",
      "old_location": "./data/answers/answer_old_60.rb",
      "starter_location": "./data/starters/starter_60.rb"
    },
    {
      "instructions": "Show how prefix and postfix incrementing works\n\nBegin a short script with this:\n\n  var num = 10;\n\n(Refer to the starter code.)\n\nOn the next line, increment num and, *in the same expression*, subtract \n10 from it, showing the result in the console. Then reset num to 10 and \nperform the same difference, but increment num in a different way.\n(There are two ways to increment, which will show the two different \nanswers.) Print the two different answers to the console. Be able to \npredict, in advance, which answer will be 0 and what the other answer \nwill be.\n\nThen, beginning at 1, *de*crement num and add 10 to it, ensuring that \nthe sum is 10. Make sure you are able to tell, in advance, which \ndecrement operator to use.\n\nFinally, say in advance and then demonstrate what num2 will be (in the\nstarter code).",
      "tags": [
        "JavaScript",
        "JS",
        "Node",
        "Node.js",
        "javascript",
        "operators",
        "prefix",
        "postfix",
        "increment",
        "decrement",
        "order of operations"
      ],
      "score": 4,
      "saved": true,
      "lang": "JavaScript",
      "date_started": "2018-09-28T08:35:51-04:00",
      "next_review_date": "2018-11-10T19:26:54-05:00",
      "all_reviews": [
        {
          "score": 4,
          "review_date": "2018-09-29T20:26:54-04:00"
        }
      ],
      "id": 13,
      "file": "answer_13.js",
      "location": "./data/answers/answer_13.js",
      "old_file": "answer_old_13.js",
      "old_location": "./data/answers/answer_old_13.js",
      "starter_location": "./data/starters/starter_13.js"
    },
    {
      "instructions": "Demonstrate let vs. var\n\nIn the starter code, assign i in two different places; in one place, \nassign it \"function scope\", and in the other, \"block scope\". The \nresult should print out two different statements. Assign another \nvariable with 'var' before the function, then try checking its value \ninside the function.",
      "tags": [
        "JavaScript",
        "JS",
        "Node",
        "Node.js",
        "var",
        "let",
        "scope"
      ],
      "score": 4,
      "saved": true,
      "lang": "JavaScript",
      "date_started": "2018-10-03T20:02:51+02:00",
      "next_review_date": "2018-11-11T09:56:03-04:00",
      "all_reviews": [
        {
          "score": 3,
          "review_date": "2018-10-03T20:16:09+02:00"
        },
        {
          "score": 4,
          "review_date": "2018-10-07T08:10:19-05:00"
        },
        {
          "score": 4,
          "review_date": "2018-10-16T09:56:33-04:00"
        }
      ],
      "id": 35,
      "file": "answer_35.js",
      "location": "./data/answers/answer_35.js",
      "old_file": "answer_old_35.js",
      "old_location": "./data/answers/answer_old_35.js",
      "starter_location": "./data/starters/starter_35.js"
    },
    {
      "instructions": "Create a default parameter\n\nCreate a 'hello' function with a default parameter of 'John Doe'. Call the\nfunction supplying a value, then not supplying a value; the latter should\nprint out as 'Hello, John Doe.'",
      "tags": [
        "JavaScript",
        "JS",
        "Node",
        "Node.js",
        "default parameters"
      ],
      "score": 4,
      "saved": true,
      "lang": "JavaScript",
      "date_started": "2018-10-06T14:07:15+01:00",
      "next_review_date": "2018-11-13T12:18:13-08:00",
      "all_reviews": [
        {
          "score": 4,
          "review_date": "2018-10-06T14:14:15+01:00"
        },
        {
          "score": 4,
          "review_date": "2018-10-13T12:18:13-07:00"
        }
      ],
      "id": 44,
      "file": "answer_44.js",
      "location": "./data/answers/answer_44.js",
      "old_file": "answer_old_44.js",
      "old_location": "./data/answers/answer_old_44.js",
      "starter_location": "./data/starters/starter_44.js"
    },
    {
      "instructions": "The rest operator\n\nRewrite this Ruby method as a JavaScript function. It should as near to \nidentical as possible.\n\ndef count_args(*args)\n  puts \"You passed #{args.length} to this function.\"\nend\n\nThen call the function and ensure it gives the correct output.",
      "tags": [
        "JavaScript",
        "JS",
        "Node",
        "Node.js",
        "rest operator"
      ],
      "score": 4,
      "saved": true,
      "lang": "JavaScript",
      "date_started": "2018-10-06T14:21:45+01:00",
      "next_review_date": "2018-11-17T13:27:17+00:00",
      "all_reviews": [
        {
          "score": 4,
          "review_date": "2018-10-06T14:27:17+01:00"
        }
      ],
      "id": 45,
      "file": "answer_45.js",
      "location": "./data/answers/answer_45.js",
      "old_file": "answer_old_45.js",
      "old_location": "./data/answers/answer_old_45.js",
      "starter_location": "./data/starters/starter_45.js"
    },
    {
      "instructions": "Iteration control\n\nIn the loop in the starter code, use three different keywords that \noffer control of an interating loop in order so that the 'numbers' \narray prints out as [1, 1, 1, 3, 5, 7, 9]. (I.e., all odd; stop at \n9; and repeat the first three numbers.) You will need to add just \ntwo lines to the loop, as well as adding one word in place of \n<fill in>.",
      "tags": [
        "Ruby",
        "break",
        "next",
        "redo"
      ],
      "score": 4,
      "saved": true,
      "lang": "Ruby",
      "date_started": "2018-09-29T22:20:38-04:00",
      "next_review_date": "2018-11-17T11:24:56-08:00",
      "all_reviews": [
        {
          "score": 3,
          "review_date": "2018-09-29T22:47:04-04:00"
        },
        {
          "score": 4,
          "review_date": "2018-10-01T11:39:48-04:00"
        },
        {
          "score": 4,
          "review_date": "2018-10-13T12:24:56-07:00"
        }
      ],
      "id": 17,
      "file": "answer_17.rb",
      "location": "./data/answers/answer_17.rb",
      "old_file": "answer_old_17.rb",
      "old_location": "./data/answers/answer_old_17.rb",
      "starter_location": "./data/starters/starter_17.rb"
    },
    {
      "instructions": "Arrays of const values\n\nIf an array arr is made up of the values of variables declared with 'const',\nand arr itself is declared with 'const', is it possible to change one of \nvalues of the array using, e.g., arr[0] = 'foo'? Demonstrate (and know the\nanswer in advance).",
      "tags": [
        "JavaScript",
        "JS",
        "Node",
        "Node.js",
        "const"
      ],
      "score": 4,
      "saved": true,
      "lang": "JavaScript",
      "date_started": "2018-10-04T21:18:50+02:00",
      "next_review_date": "2018-11-21T10:03:59-04:00",
      "all_reviews": [
        {
          "score": 4,
          "review_date": "2018-10-04T21:20:54+02:00"
        },
        {
          "score": 3,
          "review_date": "2018-10-09T10:56:37-04:00"
        },
        {
          "score": 4,
          "review_date": "2018-10-20T10:04:02-04:00"
        }
      ],
      "id": 38,
      "file": "answer_38.js",
      "location": "./data/answers/answer_38.js",
      "old_file": "answer_old_38.js",
      "old_location": "./data/answers/answer_old_38.js",
      "starter_location": "./data/starters/starter_38.js"
    },
    {
      "instructions": "Write \"Hello World!\"",
      "tags": [
        "Java",
        "hello world"
      ],
      "score": 5,
      "saved": true,
      "lang": "Java",
      "date_started": "2018-09-26T21:21:47-04:00",
      "next_review_date": "2018-11-27T04:51:10-05:00",
      "all_reviews": [
        {
          "score": 5,
          "review_date": "2018-09-27T04:51:10-04:00"
        }
      ],
      "id": 11,
      "file": "answer_11.java",
      "location": "./data/answers/answer_11.java",
      "old_file": "answer_old_11.java",
      "old_location": "./data/answers/answer_old_11.java",
      "starter_location": "./data/starters/starter_11.java"
    },
    {
      "instructions": "Using defaults in instance initialization\n\nThe defaults in the starter code are problematic for reasons Sandi Metz \nexplained. Move them into a method and use the method in #initialize. \nEnsure the answers remain the same.",
      "tags": [
        "Ruby",
        "defaults",
        "initialize",
        "merge",
        "optional arguments",
        "default arguments"
      ],
      "score": 4,
      "saved": true,
      "lang": "Ruby",
      "date_started": "2018-09-25T08:24:11-04:00",
      "next_review_date": "2018-11-27T22:06:46-04:00",
      "all_reviews": [
        {
          "score": 4,
          "review_date": "2018-09-25T14:37:03-04:00"
        },
        {
          "score": 4,
          "review_date": "2018-10-16T22:06:48-04:00"
        }
      ],
      "id": 6,
      "file": "answer_6.rb",
      "location": "./data/answers/answer_6.rb",
      "old_file": "answer_old_6.rb",
      "old_location": "./data/answers/answer_old_6.rb",
      "starter_location": "./data/starters/starter_6.rb"
    },
    {
      "instructions": "How to print a formatted table \nwith while, for, and different data types\n\nIn the following C program, add a line that prints first fahrenheit, \nthen a tab, then celsius, then a newline. Then change fahr and celsius\nso that they are floats (and try printing then). Then print the values\nfrom -20 to 120 counting by 10s. Finally, rewrite the 'while' loop with\na 'for' loop and remove all variables except fahr. Ensure the field\ntype characters are correct throughout (so, no error messages!).",
      "tags": [
        "C",
        "C language",
        "C programming language",
        "printf",
        "while",
        "for",
        "data types",
        "type characters"
      ],
      "score": 4,
      "saved": true,
      "lang": "C",
      "date_started": "2018-09-27T04:50:29-04:00",
      "next_review_date": "2018-11-28T04:14:12-05:00",
      "all_reviews": [
        {
          "score": 4,
          "review_date": "2018-09-28T04:14:12-04:00"
        }
      ],
      "id": 12,
      "file": "answer_12.c",
      "location": "./data/answers/answer_12.c",
      "old_file": "answer_old_12.c",
      "old_location": "./data/answers/answer_old_12.c",
      "starter_location": "./data/starters/starter_12.c"
    },
    {
      "instructions": "Center this in a whitespace-padded string\n\nSuppose you want to put \"Acme Products\" centered on one line and \n\"The top products for you!\" on the next line. The lines should be 75\ncharacters wide. The first should be padded with empty space, while\nthe second shoudl be padded with '=+'. Print the two lines.",
      "tags": [
        "Ruby",
        "center"
      ],
      "score": 4,
      "saved": true,
      "lang": "Ruby",
      "date_started": "2018-10-03T08:38:44+01:00",
      "next_review_date": "2018-11-28T06:10:17-05:00",
      "all_reviews": [
        {
          "score": 4,
          "review_date": "2018-10-03T08:42:04+01:00"
        },
        {
          "score": 4,
          "review_date": "2018-10-17T07:10:17-04:00"
        }
      ],
      "id": 31,
      "file": "answer_31.rb",
      "location": "./data/answers/answer_31.rb",
      "old_file": "answer_old_31.rb",
      "old_location": "./data/answers/answer_old_31.rb",
      "starter_location": "./data/starters/starter_31.rb"
    },
    {
      "instructions": "Sorting by keys and values\n\nGiven the 'mountains' hash (in the starter code), sort and print (in \nsimple table form) by name and then by height (NB, must be *decending*). \nThen do the same thing, using a different method. You'll have to output \nan array in each case, and make a method to print different arrays (four \ntimes).",
      "tags": [
        "Ruby",
        "sort",
        "sort_by"
      ],
      "score": 4,
      "saved": true,
      "lang": "Ruby",
      "date_started": "2018-10-01T12:42:44-04:00",
      "next_review_date": "2018-12-01T13:20:54-05:00",
      "all_reviews": [
        {
          "score": 4,
          "review_date": "2018-10-01T13:20:54-04:00"
        }
      ],
      "id": 27,
      "file": "answer_27.rb",
      "location": "./data/answers/answer_27.rb",
      "old_file": "answer_old_27.rb",
      "old_location": "./data/answers/answer_old_27.rb",
      "starter_location": "./data/starters/starter_27.rb"
    },
    {
      "instructions": "Sorting by different values\n\nSort the 'names' array in the starter code by firstname and then by \nlastname. Then use a different method to achieve the same result. Print \nthe name list after each sorting. Hint: One method is more verbose than\nthe other. Both are methods in the Ruby core.",
      "tags": [
        "Ruby",
        "sort",
        "sort_by"
      ],
      "score": 3,
      "saved": true,
      "lang": "Ruby",
      "date_started": "2018-10-01T12:23:09-04:00",
      "next_review_date": "2018-12-01T13:22:16-05:00",
      "all_reviews": [
        {
          "score": 3,
          "review_date": "2018-10-01T12:35:54-04:00"
        }
      ],
      "id": 26,
      "file": "answer_26.rb",
      "location": "./data/answers/answer_26.rb",
      "old_file": "answer_old_26.rb",
      "old_location": "./data/answers/answer_old_26.rb",
      "starter_location": "./data/starters/starter_26.rb"
    },
    {
      "instructions": "Fun with let and const\n\nMake a little function that makes use of at least two variables, one of\nwhich is 'let', the other 'const'. Try printing the values of the \nvariables both inside and outside the function. Try reassigning the one \nof these that you can't reassign. Then surround it with try/catch.",
      "tags": [
        "JavaScript",
        "JS",
        "Node",
        "Node.js",
        "let",
        "const",
        "constant",
        "try",
        "catch"
      ],
      "score": 4,
      "saved": true,
      "lang": "JavaScript",
      "date_started": "2018-10-03T20:28:59+02:00",
      "next_review_date": "2018-12-14T14:46:38-05:00",
      "all_reviews": [
        {
          "score": 3,
          "review_date": "2018-10-03T21:18:03+02:00"
        },
        {
          "score": 3,
          "review_date": "2018-10-04T08:33:06+02:00"
        },
        {
          "score": 4,
          "review_date": "2018-10-14T14:46:38-04:00"
        }
      ],
      "id": 36,
      "file": "answer_36.js",
      "location": "./data/answers/answer_36.js",
      "old_file": "answer_old_36.js",
      "old_location": "./data/answers/answer_old_36.js",
      "starter_location": "./data/starters/starter_36.js"
    },
    {
      "instructions": "Download this URL\n\nOn the command line, download the HTML you'll find at precisely \nhttp://larrysanger.org/. Save it directly into temp.tmp. \nTo the end of that file, append \"This is another line.\" Then \nview the end of the file to confirm it's all there, then delete \ntemp.tmp.",
      "tags": [
        "Bash",
        "command line",
        "shell",
        "shell scripting",
        "Bash scripting",
        "Linux",
        "Unix",
        "Bash scripting",
        "Linux",
        "curl",
        "pipe",
        "redirect",
        "append"
      ],
      "score": 4,
      "saved": true,
      "lang": "Bash",
      "date_started": "2018-09-25T16:57:25-04:00",
      "next_review_date": "2018-12-18T16:09:35-05:00",
      "all_reviews": [
        {
          "score": 4,
          "review_date": "2018-09-25T17:08:51-04:00"
        }
      ],
      "id": 9,
      "file": "answer_9.sh",
      "location": "./data/answers/answer_9.sh",
      "old_file": "answer_old_9.sh",
      "old_location": "./data/answers/answer_old_9.sh",
      "starter_location": "./data/starters/starter_9.sh"
    },
    {
      "instructions": "Sort array of hashes by hash attribute\n\nGiven this array of hashes:\n\nsightings = [ {bird: 'pigeon', date: '2007/04/16'}, {bird: 'bald eagle', \n  date: '1999/07/23'}, {bird: 'dodo', date: '2001/12/25'}, {bird: \n  'blue heron', date: '2012/3/1'} ]\n\nsort the hash items by date from oldest sighting date to newest, then\nprint the result in a simple table.",
      "tags": [
        "Ruby",
        "sort",
        "comparison operator"
      ],
      "score": 4,
      "saved": true,
      "lang": "Ruby",
      "date_started": "2018-10-06T08:54:17+02:00",
      "next_review_date": "2019-02-06T09:06:39+01:00",
      "all_reviews": [
        {
          "score": 4,
          "review_date": "2018-10-06T09:06:39+02:00"
        }
      ],
      "id": 41,
      "file": "answer_41.rb",
      "location": "./data/answers/answer_41.rb",
      "old_file": "answer_old_41.rb",
      "old_location": "./data/answers/answer_old_41.rb",
      "starter_location": "./data/starters/starter_41.rb"
    },
    {
      "instructions": "Fun with strings (palindromes and cases) \n\nGiven ['xanax', 'Hello', 'aya', 'FooBar'], write a brief program to show that \nthere are two palindromes in the array; then print them.  Then change all the \nitems to Title Case (and print); then change them all to ALL CAPS (and \nprint); finally, change them all to all lowercase (and print).",
      "tags": [
        "Ruby",
        "reverse",
        "count",
        "select",
        "upcase",
        "downcase",
        "capitalize"
      ],
      "score": 4,
      "saved": true,
      "lang": "Ruby",
      "date_started": "2018-09-23T22:32:33-04:00",
      "next_review_date": "2019-02-24T18:50:49-05:00",
      "all_reviews": [
        {
          "score": 4,
          "review_date": "2018-09-24T18:50:49-04:00"
        }
      ],
      "id": 2,
      "file": "answer_2.rb",
      "location": "./data/answers/answer_2.rb",
      "old_file": "answer_old_2.rb",
      "old_location": "./data/answers/answer_old_2.rb",
      "starter_location": "./data/starters/starter_2.rb"
    },
    {
      "instructions": "activities = Hash.new('fun')\n\nSuppose you assign 'activities' as above, and on the next line, you have\nsimply\n\nputs activities[:fred]\n\nWhat is the output? Predict this in advance correctly and explain briefly\nthe reason for the answer. Add some more keys (and, sometimes, values) to\n'activities', and then print it and inspect.",
      "tags": [
        "Ruby",
        "hash",
        "defaults",
        "hash default",
        "default value"
      ],
      "score": 5,
      "saved": true,
      "lang": "Ruby",
      "date_started": "2018-10-01T18:25:22-04:00",
      "next_review_date": "2019-04-01T18:27:37-04:00",
      "all_reviews": [
        {
          "score": 5,
          "review_date": "2018-10-01T18:27:37-04:00"
        }
      ],
      "id": 30,
      "file": "answer_30.rb",
      "location": "./data/answers/answer_30.rb",
      "old_file": "answer_old_30.rb",
      "old_location": "./data/answers/answer_old_30.rb",
      "starter_location": "./data/starters/starter_30.rb"
    },
    {
      "instructions": "Multidimensional array\n\nBy referring to positions of the numbers in this array,\n\na = [[5, 4], [3, 6, 2, [1, 7]], [[8]], [[[9], 10]] ]\n\nconstruct this array:\n\n[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]",
      "tags": [
        "Ruby",
        "multidimensional array",
        "array"
      ],
      "score": 5,
      "saved": true,
      "lang": "Ruby",
      "date_started": "2018-09-29T23:08:24-04:00",
      "next_review_date": "2019-06-29T23:15:43-04:00",
      "all_reviews": [
        {
          "score": 5,
          "review_date": "2018-09-29T23:15:21-04:00"
        }
      ],
      "id": 18,
      "file": "answer_18.rb",
      "location": "./data/answers/answer_18.rb",
      "old_file": "answer_old_18.rb",
      "old_location": "./data/answers/answer_old_18.rb",
      "starter_location": "./data/starters/starter_18.rb"
    }
  ]
}